vac✓ Each vaccine is it's own "definition". This allows it to be modified if CDC regulations change.

✓ Takes in Obj:
{
    birthdate: Date,
    vaccinationDates: [Date, ...],
    options: Object
}

✓ birthdate: A Date. The date of birth of the patient.
✓ vaccinationDates: Array of dates of vaccination. Can be empty in case of no vaccination.
*options: pass in type of vaccine for the ones that have multiple paths. This can be optional.
    {
        vaccine: String (Name of vaccine, needed?),
        hibFlag: String ("prp-omp" || "prp-t" || "unknown"), optional (used for hib)
        rotavirusFlag: String ("rotarix" || "rotateq" || "unknown"), optional (used for Rotavirus)
    }
* - modified version now.

*Returns object:
{
    vaccinationSchedule: [{Dose Information}, ...],
    messages: {Strings, ...}
}* - will return same vaccine object to be reassigned

✓ (these are our dose objects) vaccinationSchedule: An array of objects of the form
    {
        dose: Int, (order of dose),
        date: Date, (date of dose),
        reccommendedDate: Date, (dictated by vaccine settings),
        received: Boolean, (Did patient receive this dose already?),
        ageReceived: Date, (If received, Calculate ageReceived, null if not received),
        interval: Date, (Time delta since previous dose, if any. If no previous dose and is dose1, default to time delta since birthdate. Null if not given.),
        minInterval: Date, (Time delta, min accepted value for interval, declared by specific functions, min age for dose1 is it's minInterval)
        late: Boolean, (If it's late per the schedule),
        early: Boolean, (If it's too early, before min age or inside min interval, (technically equiv?)),
        required: Boolean, (Default true, If not required, set to false, per CDC guideline)
        notes: String, (Any notes, messages regarding this particular dose)
    },
messages: any error flags, notices for entire vaccine. Notes may go here.

✓ It can return a complete array of all doses, to display future/needed doses, and current/late doses

---
General Flow
___
✓ 1. Get data from front end: 
    - Which vaccine?
    - Array of dates given, if any.
    - Birth Date
    - Flags if needed.

2. Feed into main code, which will generally preprocess:
    - Check that none of the vaccination Dates are before birthday (vaccinationDate - birthday < 0)
        - Can throw error or return error message if so.
        - We should guard against this in front end
    ✓ Set Age = (now - birthdate)
    ✓ (not needed, just take length) Set Doses received = vaccinationDates.length
    ✓ Sort vaccinationDates, if not already
        ✓ We can sort in frontend.
    ✓ Create vaccinationSchedule array from vaccinationDates array
        - (Do this step in the switch sorter) If no vaccination dates, create empty array to be filled with recommended dates in specific function
        ✓ Populate with objects from given dates in array:
            {
                dose: current index + 1 (as counting number)
                date: date of current index,
                received: true,
                ageReceived: (date - birthdate),
                interval: dose === 1 ? ageReceived : date - previous.date
                required: true,
                notes: "", (initialize for later use)
            }
    ✓ (Seems reasonable to just use the entire vaccine object) Create Object to pass into sorter (which picks which vaccine specific function to run)
        {
            vaccinationSchedule: [{}, ...],
            dosesReceived: int,
            age: age,
            options: 
                {
                    vaccine: String,
                    hibFlag: string,
                    rotavirusFlag: string
                },
            messages: "" (initialize for later use)
        }

✓ 3. Sort (switch case) into correct vaccine specific function
    - Switch: object.options.vaccine

(Now inside of vaccine specific function)

4. Preprocess vaccine dates (process dates specific to each vaccine definition):
    - Generate recommendedDates array (scoped to function) based on CDC recommendations
        - Use latest date if given ranges
        - Add each recommended interval to Birthdate and append to array 
    - Populate the rest of the vaccinationSchedule with list of recommendedDates 
        - Generate new schedule objects if they dont already exist:
            {
                dose: next value,
                date: current date if received or null if not.
                reccommendedDate: Date, date as created by the recommendedDates array
                received: current value, false, if no date
                ageReceived: Date, (If received, Calculate ageReceived, null if not received),
                interval: Date, (Time delta since previous dose, if any. If no previous dose and is dose1, default to time delta since birthdate. Null if not given.),
                minInterval: Date, (Time delta, min accepted value for interval, declared by specific functions, min age for dose1 is it's minInterval,flag will be set by function)
                late: Boolean, (set true if date given is behind last recommended date),
                early: Boolean, (If it's too early,flag will be set by function),
                required: Boolean, (Default true, If not required, set to false, per CDC guideline)
                notes: String, (Any notes, messages regarding this particular dose)
            }

✓ 5. Pass this modified object into specific functions (below)
    ✓ Get same object back out at the end.

6. Postprocessing: after specific functions:
    ✓ Compare intervals and minIntervals and raise early flags if needed
    ✓ If vaccines need to be given today, calculate new recommendedDate based on minInterval.
    - Finalize everything before returning

✓ Example, if empty: Return the recommended schedule based on vaccine settings
    ✓ This can include a fallback schedule, start today and follows reccommendations or minInterval which ever exists (This happens now if it detects unreceived needed doses)

__________
-- specific functions for each vaccine --
-- each vaccine can have it's own settings, like time series for CDC rec doses

✓ Hepatitis A
✓ Recommended: 12M, 18M
    ✓ Set Dose1.minInterval = 12M
    ✓ Set Dose2.minInterval = 6M
    ✓ If more than 2 doses received:
       ✓ notate in messages

- Hepatitis B
✓ Recommended: 0, 1-2M, 6-18M
    ✓ Set Dose2.minInterval = 4W
    ✓ Set Dose3.minInterval = 8W
    ✓ If more than 3 doses received:
        ✓ notate in messages: 4 doses permissible if used in mixed vaccines
    ✓ If Dose3.received && (Dose3.ageReceived) < 24 weeks || (Dose3.ageReceived - Dose1.ageReceived) < 16W:
        ✓ raise early flag
        ✓ notate in dose notes
        ✓ notate in messages: Dose3 too early and/or too close to Dose1

✓ DTAP
✓ Recommended: 2M, 4M, 6M, 15-18M, 4-6Y
    ✓ Set Dose1.minInterval = 6W
    ✓ Set Dose2.minInterval = 4W
    ✓ Set Dose3.minInterval = 4W
    ✓ Set Dose4.minInterval = 6M
    ✓ Set Dose5.minInterval = 6M
    ✓ If more than 5 doses received:
        - notate in messages
    ✓ If Dose4.interval >= 6M && Dose4.ageReceived >= 4Y:
        ✓ notate in messages: Dose5 not needed. Done with vaccination series
        ✓ notate in dose notes
        ✓ set flags of following doses as needed

✓ HiB
✓ Recommended: 2M, 4M, 6M (HiB-PRP-T), 12-15M
    ✓ Set flag: PRP-OMP or PRP-T or Unknown
    ✓ Set Dose1.minInterval = 6W
    ✓ If Dose2.received && (Dose1.ageReceived >= 15M || Dose2.ageReceived >= 15M):
        ✓ notate in messages: no further doses needed. Done with vaccination series
        ✓ notate in dose notes
        ✓ set flags as neccesary in following doses
    ✓ If (Dose1.ageReceived <= 12M):
        ✓ Set Dose2.minInterval = 4W
    ✓ Else If (Dose1.ageReceived >= 12M && Dose1.ageReceived < 15M):
       ✓ Set Dose2.minInterval = 8W
        ✓ Notate in messages: no further doses after dose2 needed.
        ✓ set flags as neccesary
        ✓ notate in dose notes
    ✓ If (Age < 12M && Dose1.ageReceived < 7M && !PRP-OMP):
       ✓ Set Dose3.minInterval = 4W
    ✓ Else If (Age < 12M && (Dose1.ageReceived >= 7M && Dose1.ageReceived < 12M)) || (Age >= 12M && Age < 60M && Dose1.ageReceived < 12M && Dose2.ageReceived < 15M) || (PRP-OMP && Dose1.ageReceived < 12M && Dose2.ageReceived < 12M):
        ✓ Set Dose3.minInterval = 8W
        ✓ Notate in messages: no further doses after dose3 needed.
        ✓ set flags as neccesary
        ✓ notate in dose notes
    ✓ If (Age >= 12M && Age < 60M && Dose1.ageReceived < 12M && Dose2.ageReceived < 12M && Dose3.ageReceived < 12M):
        ✓ Set Dose4.minInterval = 8W
    ✓ If (Age >= 60M && !Dose1.received):
        ✓ Notate in messages: Too late for series. No further vaccination required.
        ✓ set flags as needed on all further vaccinations
    ✓ If More than 4 doses received:
        - notate in messages
    ✓ If More than 3 doses received && PRP-OMP:
        - notate in messages
    
✓ IPV
✓ Recommended: 2M, 4M, 6-18M, 4-6Y
    ✓ Set Dose1.minInterval = 6W
    ✓ Set Dose2.minInterval = 4W
    ✓ If (Age < 48M):
        ✓ Set Dose3.minInterval = 4W
    ✓ Else If (Age >= 48M):
        ✓ Set Dose3.minInterval = 6M
    ✓ If (Dose4.ageReceived < 48M):
        ✓ raise early flag
        ✓ notate in dose notes
        ✓ notate in messages: Dose4 too early, min age 4 years
    ✓ If more than 4 doses received:
        ✓ notate in messages
    ✓ if (age >= 4Y) 3rd dose is final dose. 4 is okay.

✓ MMR
✓ Recommended: 12-15M, 4-6Y
    ✓ Set Dose1.minInterval = 12M
    ✓ Set Dose2.minInterval = 4W
    ✓ If more than 2 doses received:
        ✓ notate in messages

✓ Varicella
✓ Recommended: 12-15M, 4-6Y
    ✓ Set Dose1.minInterval = 12M
    ✓ Set Dose2.minInterval = 3M
    ✓ If (Dose2.interval < 4W):
        ✓ raise early flag
    ✓ Else If (Dose2.interval >= 4W && Dose2.interval < 3M):
        ✓ raise early flag
        ✓ notate in messages: dose2 may be counted even if early.
    ✓ If more than 2 doses received:
        ✓ notate in messages

✓ PCV13
✓ Recommended: 2M, 4M, 6M, 12-15M
    ✓ Set Dose1.minInterval = 6W
    ✓ If (Dose1.ageReceived >= 24M || Dose2.ageReceived >= 24):
        ✓ Notate in messages: no further doses needed.
        ✓ set flags as neccesary
        ✓ notate in dose notes
    ✓ If (Dose1.ageReceived < 12M):
        ✓ Set Dose2.minInterval = 4W
    ✓ Else If (Dose1.ageReceived >= 12M):
       ✓ Set Dose2.minInterval = 8W
        ✓ Notate in messages: no further dose neccesary after dose 2
    ✓ If (Age < 12M && Dose2.ageReceived < 7M):
        ✓ Set Dose3.minInterval = 4W
   ✓ Else If (Dose2.ageReceived >= 7M && Dose2.ageReceived < 12M):
        ✓ Set Dose3.minInterval = 12M - Age <= 8W ? 8W : 12M - Age
    ✓ If (Age >= 12M && [Any Dose Given].ageReceived < 12M):
        ✓ Reset Dose2.minInterval = 8W
        ✓ Reset Dose3.minInterval = 8W
    ✓ If (Age >= 12M && Age < 60M && Dose1.ageReceived < 12M && Dose2.ageReceived < 12M && Dose3.ageReceived < 12M):
        ✓ Set Dose4.minInterval = 8W  
    ✓ If (Age >= 60M):
        ✓ Notate in messages: No Further Doses needed unless high risk.
        ✓ Notate in dose notes
        ✓ Set Flags as needed
    ✓ If more than 4 doses received:
        ✓ notate in messages

✓ Rotavirus
✓ Recommended: 2M, 4M, 6M (RotaTeq)
    ✓ Set flag: Rotarix or Rotateq or unknown
        ✓ Default to 3 Series (Rotateq) if unknown.
    ✓ Set Dose1.minInterval = 6W
    ✓ Set Dose2.minInterval = 4W
    ✓ If (Rotateq || Unknown):
        ✓ Set Dose3.minInterval = 4W
    ✓ If (Age > 8M):
        ✓ Notate in messages: No Further Doses needed
        ✓ Notate in dose notes
        ✓ Set Flags as needed
    ✓ If more than 3 doses received && (Rotateq || Unknown):
        ✓ notate in messages
    ✓ If more than 2 doses received && (Rotarix):
        ✓ notate in messages

_______